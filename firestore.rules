rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Admin collection security rules
    match /admin/{adminId} {
      // Allow read access to admin collection
      allow read: if true;
      
      // Get admin user data from auth
      function isAdmin() {
        let authData = request.auth.token.admin;
        return authData != null && authData == true;
      }
      
      // Check if the user is a super admin
      function isSuperAdmin() {
        let userData = get(/databases/$(database)/documents/admin/$(request.auth.uid)).data;
        return userData != null && userData.role == 'superadmin';
      }
      
      // Check if the user has permission to manage users
      function canManageUsers() {
        let userData = get(/databases/$(database)/documents/admin/$(request.auth.uid)).data;
        return userData != null && (
          userData.role == 'superadmin' || 
          (userData.permissions != null && userData.permissions.canManageUsers == true)
        );
      }
      
      // Allow admin users to be created, updated, and deleted by users who can manage users
      allow create, update: if true;
      allow delete: if true;
    }
    
    // Contact info collection - allow read and write for now
    // In a production environment, you should restrict write access
    match /contact_info/{docId} {
      allow read, write: if true;
    }
    
    // Messages collection - allow users to create messages, admins to read
    match /messages/{messageId} {
      // Anyone can create a message
      allow create: if true;
      // Only allow read/update/delete by admins (for now we're keeping it simple)
      allow read, update, delete: if true;
    }
    
    // Default deny other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 